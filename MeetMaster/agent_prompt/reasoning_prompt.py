Analyzer_prompt = """
---问题开始---
我有一些特定问题的指令：
---指令开始---
{{initial_prompt}}
---指令结束---
但它在以下案例中出错了：
---错误案例开始---
{{bad_examples}}
---错误案例结束---
作为分析者，您的任务是找出我的[#指令]的根本原因。请按照以下步骤操作：
(1) 确定需要考虑的所有视角。请尽可能全面地思考，考虑所有方面。
(2) 基于您确定的这些潜在视角，分析失败案例的模式。
(3) 仔细审查我的[#指令]的每一步，并确定哪一步忽略了模式中的关键信息，导致失败。
(4) 写下您的理由，并用<START>和<END>包裹每个理由。

"""


Summarizer_prompt = """
---问题开始---
我有一些特定问题的指令：
---指令开始---
{{initial_prompt}}
---指令结束---
以下是我当前指令无法解决某些问题的一些原因：
---原因---
{{Reasons}}
---原因--- 
您的任务是将上述提供的多个原因归纳为几个主要类别，并为每个类别分配重要性分数。注意消除重复和相似的原因。每个总结的模式都应该用<START>和<END>包裹。

"""


Revisor_prompt = """
---问题开始---
您有一些特定任务的指令：
---指令开始---
{{initial_prompt}}
---指令结束---
然而，由于现实世界情况的复杂性，单一流程的指令（即顺序指令）无法适用于所有情况。因此，您应该将指令转变为条件方法，这意味着针对不同模式采用不同的指令。值得注意的是，这个过程的关键方面是创建一个自适应提示结构，从而适应不同难度的任务。为了实现这一点，您应该在添加分支以解决新模式和提供更多细节以增强现有分支之间找到黄金平衡点，这取决于您任务的难度和已识别模式的分布。
一位专家指出了您之前未考虑到的指令模式：
---专家分析开始---
{{patterns}}
---专家分析结束---
请基于专家分析逐步优化您的[#指令]：
(1) 仔细审查您指令的每一步。
(2) 确定由于缺乏专家分析中提及的关键信息而出错的步骤。
(3) 对于每个不理想的步骤，您有以下选择：

3.1 考虑改进该步骤以包含关键信息。
3.2 或者，您也可以考虑使用if或if-else结构添加子步骤来处理新模式。确保每个子步骤具体明确，避免模糊指令。请注意，如果一个步骤需要考虑多种情况，将其分解为子步骤以使其更易于遵循。
(4) 包含提示或注意事项：如果仅通过带有if-else等分支的优化现有步骤不足以解决所有方面，请添加新的提示或注意事项以处理不同模式。
(5) 保持其他主要步骤与初始提示相同，以不丢失信息。
(6) 最后，审查整个步骤并修剪分支，以避免指令过度拟合。

请只输出优化后的提示，不要输出其他内容。

"""